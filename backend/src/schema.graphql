#import * from './generated/prisma.graphql';

# Client facing types, mutations etc

# We must define shape of data as we're staticly typed

############################
# TYPES ####################
############################

type Dog {
  name: String!
}

############################
# MUTATIONS ################
############################

type Mutation {
  createDog(name: String!): Dog
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
    user: String
  ): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  signup(email: String, password: String!, name: String!) : User!
  signin(email: String, password: String!) : User!
}

############################
# QUERIES   ################
############################

# For every query, we must have a resolver!
type Query {
  # DEMO
  fetchDogs: [Dog]!
  fetchGlobalDogs: [Dog]!
  fetchItems: [Item]!
  # ITEMS
  items(where: ItemWhereInput, orderBy:ItemOrderByInput, skip:Int, first: Int): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput) : ItemConnection,
  me: User
}
