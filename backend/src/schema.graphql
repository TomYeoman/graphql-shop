# Client facing types, mutations etc

# We must define shape of data as we're staticly typed
type Dog {
  name: String!
}

type Mutation {
  createDog(name: String!): Dog
}

# For every query, we must have a resolver!
type Query {
  # ! means no items can be mull
  dogs: [Dog]!
  globalDogs: [Dog]!
}
